--------------------------------------------------------------
-- This file was automatically generated by Cocos Studio.
-- Do not make changes to this file.
-- All changes will be lost.
--------------------------------------------------------------

local luaExtend = require "LuaExtend"

-- using for layout to decrease count of local variables
local layout = nil
local localLuaFile = nil
local innerCSD = nil
local innerProject = nil
local localFrame = nil

local Result = {}
------------------------------------------------------------
-- function call description
-- create function caller should provide a function to 
-- get a callback function in creating scene process.
-- the returned callback function will be registered to 
-- the callback event of the control.
-- the function provider is as below :
-- Callback callBackProvider(luaFileName, node, callbackName)
-- parameter description:
-- luaFileName  : a string, lua file name
-- node         : a Node, event source
-- callbackName : a string, callback function name
-- the return value is a callback function
------------------------------------------------------------
function Result.create(callBackProvider)

local result={}
setmetatable(result, luaExtend)

--Create Layer
local Layer=cc.Node:create()
Layer:setName("Layer")
layout = ccui.LayoutComponent:bindLayoutComponent(Layer)
layout:setSize({width = 400.0000, height = 50.0000})

--Create root
local root = ccui.Layout:create()
root:ignoreContentAdaptWithSize(false)
root:setClippingEnabled(false)
root:setBackGroundColorType(1)
root:setBackGroundColor({r = 0, g = 0, b = 0})
root:setBackGroundColorOpacity(102)
root:setLayoutComponentEnabled(true)
root:setName("root")
root:setTag(1336)
root:setCascadeColorEnabled(true)
root:setCascadeOpacityEnabled(true)
layout = ccui.LayoutComponent:bindLayoutComponent(root)
layout:setPercentWidthEnabled(true)
layout:setPercentHeightEnabled(true)
layout:setPercentWidth(1.0000)
layout:setPercentHeight(1.0000)
layout:setSize({width = 400.0000, height = 50.0000})
Layer:addChild(root)

--Create name
local name = ccui.Text:create()
name:ignoreContentAdaptWithSize(true)
name:setTextAreaSize({width = 0, height = 0})
name:setFontName("game/niuniu/resource/font/font.TTF")
name:setFontSize(25)
name:setString([[rose]])
name:setLayoutComponentEnabled(true)
name:setName("name")
name:setTag(1334)
name:setCascadeColorEnabled(true)
name:setCascadeOpacityEnabled(true)
name:setAnchorPoint(0.0000, 0.5000)
name:setPosition(44.8326, 26.1128)
name:setTextColor({r = 165, g = 42, b = 42})
layout = ccui.LayoutComponent:bindLayoutComponent(name)
layout:setPositionPercentX(0.1121)
layout:setPositionPercentY(0.5223)
layout:setPercentWidth(0.1250)
layout:setPercentHeight(0.5800)
layout:setSize({width = 50.0000, height = 29.0000})
layout:setLeftMargin(44.8326)
layout:setRightMargin(305.1674)
layout:setTopMargin(9.3872)
layout:setBottomMargin(11.6128)
root:addChild(name)

--Create coin
local coin = ccui.Text:create()
coin:ignoreContentAdaptWithSize(true)
coin:setTextAreaSize({width = 0, height = 0})
coin:setFontName("game/niuniu/resource/font/font.TTF")
coin:setFontSize(30)
coin:setString([[10000]])
coin:setLayoutComponentEnabled(true)
coin:setName("coin")
coin:setTag(1335)
coin:setCascadeColorEnabled(true)
coin:setCascadeOpacityEnabled(true)
coin:setAnchorPoint(0.0000, 0.5000)
coin:setPosition(188.7652, 25.2325)
coin:setTextColor({r = 139, g = 105, b = 20})
layout = ccui.LayoutComponent:bindLayoutComponent(coin)
layout:setPositionPercentX(0.4719)
layout:setPositionPercentY(0.5046)
layout:setPercentWidth(0.2050)
layout:setPercentHeight(0.7000)
layout:setSize({width = 82.0000, height = 35.0000})
layout:setLeftMargin(188.7652)
layout:setRightMargin(129.2348)
layout:setTopMargin(7.2675)
layout:setBottomMargin(7.7325)
root:addChild(coin)

--Create Animation
result['animation'] = ccs.ActionTimeline:create()
  
result['animation']:setDuration(0)
result['animation']:setTimeSpeed(1.0000)
--Create Animation List

result['root'] = Layer
return result;
end

return Result

