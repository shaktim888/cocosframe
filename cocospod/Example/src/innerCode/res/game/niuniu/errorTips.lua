--------------------------------------------------------------
-- This file was automatically generated by Cocos Studio.
-- Do not make changes to this file.
-- All changes will be lost.
--------------------------------------------------------------

local luaExtend = require "LuaExtend"

-- using for layout to decrease count of local variables
local layout = nil
local localLuaFile = nil
local innerCSD = nil
local innerProject = nil
local localFrame = nil

local Result = {}
------------------------------------------------------------
-- function call description
-- create function caller should provide a function to 
-- get a callback function in creating scene process.
-- the returned callback function will be registered to 
-- the callback event of the control.
-- the function provider is as below :
-- Callback callBackProvider(luaFileName, node, callbackName)
-- parameter description:
-- luaFileName  : a string, lua file name
-- node         : a Node, event source
-- callbackName : a string, callback function name
-- the return value is a callback function
------------------------------------------------------------
function Result.create(callBackProvider)

local result={}
setmetatable(result, luaExtend)

--Create Layer
local Layer=cc.Node:create()
Layer:setName("Layer")
layout = ccui.LayoutComponent:bindLayoutComponent(Layer)
layout:setSize({width = 720.0000, height = 1280.0000})

--Create TopPanel
local TopPanel = ccui.Layout:create()
TopPanel:ignoreContentAdaptWithSize(false)
TopPanel:setClippingEnabled(false)
TopPanel:setBackGroundColorOpacity(102)
TopPanel:setLayoutComponentEnabled(true)
TopPanel:setName("TopPanel")
TopPanel:setTag(27)
TopPanel:setCascadeColorEnabled(true)
TopPanel:setCascadeOpacityEnabled(true)
TopPanel:setAnchorPoint(0.5000, 0.5000)
TopPanel:setPosition(362.0880, 641.5360)
layout = ccui.LayoutComponent:bindLayoutComponent(TopPanel)
layout:setPositionPercentX(0.5029)
layout:setPositionPercentY(0.5012)
layout:setPercentWidthEnabled(true)
layout:setPercentHeightEnabled(true)
layout:setPercentWidth(1.0000)
layout:setPercentHeight(1.0000)
layout:setSize({width = 720.0000, height = 1280.0000})
layout:setHorizontalEdge(3)
layout:setVerticalEdge(3)
layout:setLeftMargin(2.0880)
layout:setRightMargin(-2.0880)
layout:setTopMargin(-1.5360)
layout:setBottomMargin(1.5360)
Layer:addChild(TopPanel)

--Create ruleBg
local ruleBg = cc.Sprite:create("game/niuniu/resource/rulewindow.png")
ruleBg:setName("ruleBg")
ruleBg:setTag(94)
ruleBg:setCascadeColorEnabled(true)
ruleBg:setCascadeOpacityEnabled(true)
ruleBg:setPosition(360.0000, 640.0000)
layout = ccui.LayoutComponent:bindLayoutComponent(ruleBg)
layout:setPositionPercentXEnabled(true)
layout:setPositionPercentYEnabled(true)
layout:setPositionPercentX(0.5000)
layout:setPositionPercentY(0.5000)
layout:setPercentWidth(1.7778)
layout:setPercentHeight(0.5625)
layout:setSize({width = 1280.0000, height = 720.0000})
layout:setLeftMargin(-280.0000)
layout:setRightMargin(-280.0000)
layout:setTopMargin(280.0000)
layout:setBottomMargin(280.0000)
ruleBg:setBlendFunc({src = 1, dst = 771})
TopPanel:addChild(ruleBg)

--Create contentText
local contentText = ccui.Text:create()
contentText:ignoreContentAdaptWithSize(false)
contentText:setFontName("game/niuniu/resource/font/font.TTF")
contentText:setFontSize(30)
contentText:setString([[ 您拼的牛数错误或您没有进行拼牛或如果没牛应按下没牛按钮]])
contentText:setLayoutComponentEnabled(true)
contentText:setName("contentText")
contentText:setTag(38)
contentText:setCascadeColorEnabled(true)
contentText:setCascadeOpacityEnabled(true)
contentText:setPosition(643.7479, 350.4806)
layout = ccui.LayoutComponent:bindLayoutComponent(contentText)
layout:setPositionPercentX(0.5029)
layout:setPositionPercentY(0.4868)
layout:setPercentWidth(0.3906)
layout:setPercentHeight(0.2361)
layout:setSize({width = 500.0000, height = 170.0000})
layout:setLeftMargin(393.7479)
layout:setRightMargin(386.2521)
layout:setTopMargin(284.5194)
layout:setBottomMargin(265.4806)
ruleBg:addChild(contentText)

--Create Animation
result['animation'] = ccs.ActionTimeline:create()
  
result['animation']:setDuration(0)
result['animation']:setTimeSpeed(1.0000)
--Create Animation List

result['root'] = Layer
return result;
end

return Result

